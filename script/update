#!/bin/bash
#
# update - update the project following a pull
#

set -e

cd "$(dirname "$0")/.."

# Check to see if we've got a specific context.
export CONTEXT=${CONTEXT:-all}

# Check for Swarm mode.
SWARM=$(docker info 2>/dev/null | grep '^ Swarm' | awk '{ print $NF }')

if [ "$CONTEXT" = "build" ]; then
  script/setup
else

  # Run bootstrap, passing through conext.
  script/bootstrap

  echo "==> Checking CONSUL submodule for local changes..."
  cd consul
  if [ -n "$(git status --porcelain)" ]; then
    echo "==> WARNING local changes found!"
  else
    echo "==> None found."
  fi
  cd ..

  if [ "$SWARM" = "inactive" ] ; then
    COMPOSE_FILES="-f docker-compose.yml -f docker-compose-database.yml"
    echo "==> Running in compose mode (Swarm mode is ${SWARM})."

    echo "==> Bringing down the stack..."
    docker-compose $COMPOSE_FILES down

    echo "==> Bring up the database and running migrations...."
    docker-compose $COMPOSE_FILES up -d database
    sleep 5
    docker-compose $COMPOSE_FILES run --rm app rake db:migrate

    echo "==> Stopping the database..."
    docker-compose $COMPOSE_FILES down
  else
    echo "==> Running in Swarm mode..."
    source ../env.swarm
    STACK=$(echo $SERVER_NAME | sed -e 's/\./_/g')
    sed -e 's/export //g' ../env.swarm > env.tmp
    docker run --rm --env-file=env.tmp \
      --network=consul_staging_mysociety_org_default \
      --mount type=bind,src=${PWD}/config/secrets.yml.deploy,target=/var/www/consul/config/secrets.yml,readonly=true \
      --mount type=bind,src=${PWD}/config/database.yml.deploy,target=/var/www/consul/config/database.yml,readonly=true \
      --mount type=bind,src=${PWD}/config/application_custom.rb,target=/var/www/consul/config/application_custom.rb,readonly=true \
      mysocietyorg/consul:${TAG:-latest} \
      rake db:migrate
    rm -f ./env.tmp
  fi
fi

echo "==> Update complete."
